<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vulnerable Applications on Cyber Security Wiki</title><link>https://cyber-security.wiki/docs/application-security/Vulnerable-Applications/</link><description>Recent content in Vulnerable Applications on Cyber Security Wiki</description><generator>Hugo</generator><language>en</language><atom:link href="https://cyber-security.wiki/docs/application-security/Vulnerable-Applications/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://cyber-security.wiki/docs/application-security/Vulnerable-Applications/Api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cyber-security.wiki/docs/application-security/Vulnerable-Applications/Api/</guid><description>API application # This Cheat sheet focus on Installing different Vulnerable Web API applications that build with different technology stacks like Java, Nodejs, PHP and Python
Easier for peoples to download and install in different ways through Docker, Vagrant, VM, Manual, and Host in local machine.
Java Vulnerable API # Completely ridiculous API [crAPI] Docker git clone https://github.com/OWASP/crAPI.git cd crAPI curl -o docker-compose.yml https://raw.githubusercontent.com/OWASP/crAPI/main/deploy/docker/docker-compose.yml docker-compose pull docker-compose -f docker-compose.yml --compatibility up -d Browse http://localhost:8888 Vagrant git clone https://github.</description></item><item><title/><link>https://cyber-security.wiki/docs/application-security/Vulnerable-Applications/WebApp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cyber-security.wiki/docs/application-security/Vulnerable-Applications/WebApp/</guid><description>Web application # This Cheat sheet focus on Installing different Vulnerable Web applications that build with different technology stacks like Java, Nodejs, PHP and Python [Contains 30+ Vulnerable Applications]
Easier for peoples to download and install in different ways through Docker, Vagrant, VM, Manual, and Host in local machine.
Java Vulnerable Applications # Web Goat Host in local machine download jar file: https://github.com/WebGoat/WebGoat/releases/download/v2023.4/webgoat-2023.4.jar java -jar webgoat&amp;lt;branchname&amp;gt; Browse localhost:8080/WebGoat Register &amp;amp; start practicing Docker docker pull webgoat/goatandwolf docker run -it -p 127.</description></item></channel></rss>